{"remainingRequest":"/media/j/Новый том/js/forOks/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/media/j/Новый том/js/forOks/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/j/Новый том/js/forOks/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/j/Новый том/js/forOks/src/sections/News-main.vue?vue&type=template&id=172a876a&","dependencies":[{"path":"/media/j/Новый том/js/forOks/src/sections/News-main.vue","mtime":1604750624615},{"path":"/media/j/Новый том/js/forOks/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/j/Новый том/js/forOks/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/media/j/Новый том/js/forOks/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/j/Новый том/js/forOks/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiTmV3cy1tYWluICIgfSwgWwogICAgX2MoImltZyIsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkb3RzIiwKICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvbmV3cy1kb3RzLnN2ZyIpLCBhbHQ6ICIiIH0KICAgIH0pLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIteGwgbmV3cy13cmFwcGVyIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIiB9LCBbCiAgICAgICAgX3ZtLl9tKDApLAogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICJjb2wtbGctMTAgY29sLTEyIGQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGZsZXgtd3JhcCIKICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5fbChfdm0ubmV3cywgZnVuY3Rpb24oYXJ0aWNsZSwgaW5kZXgpIHsKICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsga2V5OiBpbmRleCwgc3RhdGljQ2xhc3M6ICJjb2wtbGctNSBjb2wtMTIgbmV3cy1pdGVtIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBpbmRleCA8PSAxCiAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogaW5kZXgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZC1mbGV4IGZsZXgtY29sdW1uIGFsaWduLWl0ZW1zLWVuZCB3LTEwMCBuZXdzLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRvOiAvbk5ld3NBcnRpYy8gKyBpbmRleCB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ3LTk4IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogYXJ0aWNsZS5pbWcsIGFsdDogIiIgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInctOTggZGF0ZSIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhhcnRpY2xlLmRhdGUpKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInctOTgiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoYXJ0aWNsZS50aXRsZSkgKyAiICIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImFsbC1uZXdzLWxpbmsgY29sLTUgcGwtMCIgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygicm91dGVyLWxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiL05ld3MiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIiDQktGB0LUg0L3QvtCy0L7RgdGC0LggIiksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJzdmciLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiNDQiLAogICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIyMCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g6ICIwIDAgNDQgMjAiLAogICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAibm9uZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zOiAiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygicGF0aCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBkOiAiTTEgMTBINDNNNDMgMTBMMzUuNjExMSAxTTQzIDEwTDM1LjYxMTEgMTkiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZTogIiMyMTk2NTMiLAogICAgICAgICAgICAgICAgICAgICAgICAgICJzdHJva2Utd2lkdGgiOiAiMiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgInN0cm9rZS1saW5lY2FwIjogInJvdW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAic3Ryb2tlLWxpbmVqb2luIjogInJvdW5kIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtNSIgfSkKICAgICAgICAgIF0sCiAgICAgICAgICAyCiAgICAgICAgKQogICAgICBdKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1sZy0yIGNvbC0xMiIgfSwgWwogICAgICBfYygiaDMiLCBbX3ZtLl92KCLQndC+0LLQvtGB0YLQuCIpXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}